#ifndef MSPIO
#define MSPIO

#include "mspioshared.h"

#ifdef WIN32
#include <windows.h>
HWND hMainWnd = NULL; /* there is no Window */
#endif

// Define INTERRUPTS if interrupts 
// should be generated by this device (P1/P2 ports of MSP430)
#define INTERRUPTS		

// device registers
enum reg_names {
	REG_IN,		// input buffer
	REG_OUT,	// output buffer
	REG_DIR,	// direction bits (0: input, 1: output)
#ifdef INTERRUPTS
	REG_INT_FLAG,			// interrupt flags
	REG_INT_EDGE_SELECT,	//  edge selection for interrupt generation (0: interrupt on low->high transition,
							// 1: interrupt on high->low transition)
	REG_INT_ENABLE,			// interrupt enable reg (1: enable interrupts)
#endif
	REG_PORT_SELECT			// port select register: (0: I/O used for pin, 1: peripheral used for pin)
};


// The memory mapped registers allocate 4/7 bytes
#ifdef INTERRUPTS
#define MEMSIZE 7
#else
#define MEMSIZE 4
#endif

// vmb reference
extern device_info vmb;

// The size of mapped memory (4 or 7 bytes)
extern int memsize;

// VMB interface functions
extern void initVMBInterface();
extern void wait_for_disconnect();
extern void init_device(device_info *vmb);
extern void device_poweron(void);
extern void device_reset(void);
extern unsigned char *device_get_payload(unsigned int offset,int size);
extern void device_put_payload(unsigned int offset,int size, unsigned char *payload);
extern void sendChanges(unsigned char payload);
extern int wait_for_power(void);
extern void vmb_atexit(void);
#endif